workspace(
    name = "org_openmined_psi",
)

# Finish node setup
load("@build_bazel_rules_nodejs//:index.bzl", "node_repositories", "npm_install")

# Finish emsdk setup
load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
load("@org_openmined_psi//private_set_intersection:deps.bzl", "psi_deps")
load("@org_openmined_psi//private_set_intersection:preload.bzl", "psi_preload")
load("@pip_deps//:requirements.bzl", "install_deps")
load("@python_3_11//:defs.bzl", "interpreter")
load("@rules_python//python:pip.bzl", "pip_parse")
load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")

psi_preload()

psi_deps()

# Finish python setup

py_repositories()

python_register_toolchains(
    name = "python_3_11",
    python_version = "3.11",
)

register_toolchains("@python_3_11//:all")

pip_parse(
    name = "pip_deps",
    python_interpreter_target = interpreter,
    # Generated via pip-compile requirements.in
    requirements_lock = "@org_openmined_psi//private_set_intersection/python:requirements.txt",
)

install_deps()

node_repositories()

npm_install(
    name = "npm",
    package_json = "//:package.json",
    package_lock_json = "//:package-lock.json",
)

emsdk_emscripten_deps()
