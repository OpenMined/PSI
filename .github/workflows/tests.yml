name: Tests

on:
  push:
    branches: [master]
  pull_request:

jobs:
  Core:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        timeout-minutes: 30
        run: .github/workflows/scripts/run_tests_core.sh
      - name: Linters
        run: .github/workflows/scripts/lint_cpp.sh
        if: ${{ matrix.os == 'ubuntu-18.04' }}

  JS:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        timeout-minutes: 60
        run: .github/workflows/scripts/run_tests_js.sh

  Python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r private_set_intersection/python/requirements_dev.txt
      - name: Run tests
        timeout-minutes: 30
        run: .github/workflows/scripts/run_tests_python.sh
      - name: Python linters
        run: .github/workflows/scripts/lint_python.sh

  Go:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Install toolchains
        uses: actions/setup-go@v2
        with:
          go-version: 1.13.3
        id: go
      - name: Install Go dependencies
        run: go get -u golang.org/x/lint/golint
      - uses: actions/checkout@v2
      - name: Run tests
        timeout-minutes: 30
        run: .github/workflows/scripts/run_tests_go.sh
      - name: Go linters
        run: .github/workflows/scripts/lint_go.sh

  Rust:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Install toolchains
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - uses: actions/checkout@v2
      - name: Run tests
        timeout-minutes: 30
        run: .github/workflows/scripts/run_tests_rust.sh
