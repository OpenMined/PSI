module(
    name = "org_openmined_psi",
    version = "2.0.3",
)

# Fetch external dependencies using http_archive via use_repo_rule
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Core Bazel dependencies from Bazel Central
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_cc", version = "0.0.10")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_proto_grpc", version = "5.0.0")
bazel_dep(name = "rules_proto_grpc_cpp", version = "5.0.0")
bazel_dep(name = "rules_proto_grpc_python", version = "5.0.0")
bazel_dep(name = "rules_proto_grpc_go", version = "5.0.0")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.39.0")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_python", version = "0.36.0")
bazel_dep(name = "rules_rust", version = "0.51.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_apple", version = "3.9.2", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "apple_support", version = "1.17.0", repo_name = "build_bazel_apple_support")
bazel_dep(name = "abseil-cpp", version = "20240722.0")
bazel_dep(name = "protobuf", version = "28.2")
bazel_dep(name = "boringssl", version = "0.20240913.0")
bazel_dep(name = "grpc", version = "1.66.0.bcr.2", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "googletest", version = "1.15.2")
bazel_dep(name = "google_benchmark", version = "1.8.5")
bazel_dep(name = "glog", version = "0.7.1")
bazel_dep(name = "rules_python_gazelle_plugin", version = "0.36.0")
bazel_dep(name = "pybind11_bazel", version = "2.12.0")

# TODO: Determine if we need 'upb' any more.
bazel_dep(name = "upb", version = "0.0.0-20230907-e7430e6")

# Grpc
grpc_deps = use_extension(
    "//bazel:grpc_deps.bzl",
    "grpc_extension",
)
grpc_deps.load_dependencies()
use_repo(grpc_deps)

http_archive(
    name = "google_protobuf",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.20.1.tar.gz"],
    sha256 = "8b28fdd45bab62d15db232ec404248901842e5340299a57765e48abe8a80d930",
    strip_prefix = "protobuf-3.20.1",
)

http_archive(
    name = "private_join_and_compute",
    sha256 = "9702d5e1e4deeb111e235952e1e831dc9d9f0127ed8a1a30112b235d11f3e937",
    strip_prefix = "private-join-and-compute-2f678958e1b5a1a86adf96830c7c21d9cb2075f3",
    url = "https://github.com/s0l0ist/private-join-and-compute/archive/2f678958e1b5a1a86adf96830c7c21d9cb2075f3.zip",
)

# http_archive(
#     name = "io_bazel_rules_go",
#     sha256 = "de7974538c31f76658e0d333086c69efdf6679dbc6a466ac29e65434bf47076d",
#     urls = [
#         "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.45.0/rules_go-v0.45.0.zip",
#         "https://github.com/bazelbuild/rules_go/releases/download/v0.45.0/rules_go-v0.45.0.zip",
#     ],
# )

# Continue defining other external dependencies as needed...

# NodeJS repository setup
# npm_install = use_repo_rule("@build_bazel_rules_nodejs//:index.bzl", "npm_install")
# npm_install(
#     name = "npm",
#     package_json = "//:package.json",
#     package_lock_json = "//:package-lock.json",
# )

## Python
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.8",
)
python.toolchain(
    python_version = "3.9",
)
python.toolchain(
    python_version = "3.10",
)
python.toolchain(
    python_version = "3.11",
)

use_repo(
    python,
    # register toolchains
    "python_3_8",
    "python_3_9",
    "python_3_10",
    "python_3_11",
    # Handy helper for all
    "python_versions",
)

register_toolchains(
    "@python_3_8//:all",
    "@python_3_9//:all",
    "@python_3_10//:all",
    "@python_3_11//:all",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
use_repo(pip, "psi_deps")
pip.parse(
    hub_name = "psi_deps",
    python_version = "3.8",
    requirements_lock = "//private_set_intersection/python/requirements:requirements_lock_3_8.txt",
)
pip.parse(
    hub_name = "psi_deps",
    python_version = "3.9",
    requirements_lock = "//private_set_intersection/python/requirements:requirements_lock_3_9.txt",
)
pip.parse(
    hub_name = "psi_deps",
    python_version = "3.10",
    requirements_lock = "//private_set_intersection/python/requirements:requirements_lock_3_10.txt",
)
pip.parse(
    hub_name = "psi_deps",
    python_version = "3.11",
    requirements_lock = "//private_set_intersection/python/requirements:requirements_lock_3_11.txt",
)

## Rust
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.80.1"],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

# Proto toolchain
register_toolchains("@rules_rust//proto/protobuf:default-proto-toolchain")
rust_proto = use_extension("@rules_rust//proto:extensions.bzl", "rust_proto")
rust_proto.repositories()

# Rust Crates
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate", isolate = True)
crate.spec(
    package = "libc",
    version = "0.2.159",
)
crate.spec(
    package = "protobuf",
    version = "3.5.1",
)
crate.spec(
    package = "semver",
    version = "1.0.23",
)
crate.spec(
    package = "bencher",
    version = "0.1.5",
)
crate.from_specs()
use_repo(crate, "crates")

## Golang

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.23.1")
use_repo(
    go_sdk,
    "go_toolchains",
)
register_toolchains("@go_toolchains//:all")
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")

go_deps.from_file(go_mod = "//private_set_intersection/go:go.mod")
use_repo(
    go_deps,
    "org_golang_google_protobuf",
)
# gRPC dependencies
# grpc_deps = use_repo_rule("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
# grpc_deps()

# Golang dependencies
# go_rules_dependencies = use_repo_rule("@io_bazel_rules_go//go:deps.bzl", "go_rules_dependencies")
# go_register_toolchains = use_repo_rule("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains")

# go_rules_dependencies()
# go_register_toolchains(version = "1.21.6")

# Apple dependencies for macOS/iOS support
# apple_rules_dependencies = use_repo_rule("@build_bazel_rules_apple//apple:repositories.bzl", "apple_rules_dependencies")
# apple_rules_dependencies()

# EMSDK setup
# emscripten_deps = use_repo_rule("@emsdk//:emscripten_deps.bzl", "emscripten_deps")
# emscripten_deps()

# # Rules Proto GRPC toolchains
# rules_proto_grpc_toolchains = use_repo_rule("@rules_proto_grpc//:repositories.bzl", "rules_proto_grpc_toolchains")
# rules_proto_toolchains = use_repo_rule("@rules_proto//proto:repositories.bzl", "rules_proto_toolchains")

# rules_proto_grpc_toolchains()
# rules_proto_toolchains()
